name: ci

on:
  push:
    paths:
      - .github/workflows/custom_ci.yml
      - lib/**
      - spec/**
      - Gemfile
      - "*.gemspec"
      - .rubocop.yml
  pull_request:
    branches:
      - master

jobs:
  tests-mri:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby: ["2.6.x", "2.5.x", "2.4.x"]
        appraisal:
          - "dry-types-1.x"
          - "dry-types-master"
          - "rom-5.x"
          - "rom-master"
          - "sequel-5.x"
          - "sequel-master"
        include:
          - ruby: "2.6.x"
            coverage: "true"
          - appraisal: "dry-types-1.x"
            gemfile: "gemfiles/dry_types_1.x.gemfile"
          - appraisal: "dry-types-master"
            gemfile: "gemfiles/dry_types_master.gemfile"
          - appraisal: "rom-5.x"
            gemfile: "gemfiles/rom_5.x.gemfile"
          - appraisal: "rom-master"
            gemfile: "gemfiles/rom_master.gemfile"
            fail_on_warnings: "true"
          - appraisal: "sequel-5.x"
            gemfile: "gemfiles/sequel_5.x.gemfile"
          - appraisal: "sequel-master"
            gemfile: "gemfiles/sequel_master.gemfile"
    steps:
      - uses: actions/checkout@v1
      - name: Stop default Ubuntu MySQL
        run: sudo service mysql stop
      - name: Install dependencies
        run: sudo apt-get install -y --no-install-recommends libpq-dev libmysqlclient-dev libsqlite3-dev
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "11"
          postgresql db: rom_sql
          postgresql user: runner
      - uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: "latest"
          mysql database: "rom_sql"
          mysql root password: "asdf123"
      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{matrix.ruby}}
      - name: Install bundler
        run: gem install bundler
      - name: Bundle
        run: bundle install --jobs 4 --retry 3 --without tools docs benchmarks --gemfile ${{matrix.gemfile}}
      - name: Run all tests
        env:
          COVERAGE: ${{matrix.coverage}}
          CODACY_RUN_LOCAL: ${{matrix.coverage}}
          CODACY_PROJECT_TOKEN: ${{secrets.CODACY_PROJECT_TOKEN}}
          MYSQL_DSN: mysql2://root:asdf123@127.0.0.1/rom_sql
          BUNDLE_GEMFILE: ${{matrix.gemfile}}
          FAIL_ON_WARNINGS: ${{matrix.fail_on_warnings}}
        run: bundle exec rake
      - name: Download test reporter
        if: "matrix.coverage == 'true'"
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
        run: |
          [ "$CC_TEST_REPORTER_ID" = "" ] && exit 0
          mkdir -p tmp/
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
          chmod +x ./tmp/cc-test-reporter
          ./tmp/cc-test-reporter before-build
      - name: Send coverage results
        if: "matrix.coverage == 'true'"
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
          GIT_COMMIT_SHA: ${{github.sha}}
          GIT_BRANCH: ${{github.ref}}
          GIT_COMMITTED_AT: ${{github.event.head_commit.timestamp}}
        run: |
          [ "$CC_TEST_REPORTER_ID" = "" ] && exit 0
          GIT_BRANCH=`ruby -e "puts ENV['GITHUB_REF'].split('/', 3).last"` \
          GIT_COMMITTED_AT=`ruby -r time -e "puts Time.iso8601(ENV['GIT_COMMITTED_AT']).to_i"` \
          ./tmp/cc-test-reporter after-build

  tests-jruby:
    runs-on: ubuntu-latest
    container:
      image: "jruby:9.2.9"
    services:
      postgres_db:
        image: postgres:10.8
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: ""
          POSTGRES_DB: rom_sql
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      mysql_db:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: asdf123
          MYSQL_DATABASE: rom_sql
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v1
      - name: Install bundler
        run: gem install bundler
      - name: Bundle
        run: bundle install --jobs 4 --retry 3 --without tools docs benchmarks
      - name: Run all tests
        run: bundle exec rake
        env:
          MYSQL_DSN: jdbc:mysql://mysql_db/rom_sql?user=root&password=asdf123&useSSL=false
          POSTGRES_DSN: jdbc:postgresql://postgres_db/rom_sql
